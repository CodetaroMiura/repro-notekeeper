{"version":3,"sources":["components/Header.js","components/Backdrop.js","components/SearchBar.js","components/Filter.js","components/NewNoteModal.js","components/MenuButtons.js","components/underTheHood/NoteChecker.js","NoteIt.js","index.js"],"names":["Header","id","Backdrop","props","onClick","onCancel","SearchBar","type","autoFocus","className","Filter","FilterOptions","content","filterImportant","filterAll","off","document","getElementsByClassName","i","length","style","display","note","NewNoteModal","React","useEffect","today","Date","day","getDate","month","getMonth","slice","year","getFullYear","currentDate","milli","parse","minimumDate","minimumDay","minimumMonth","minimumYear","getElementById","setAttribute","minimumSetDate","method","encType","htmlFor","name","required","creationDate","MenuButtons","window","onload","addEventListener","filterClose","useState","modalBackdrop","setModalBackdrop","modalNewNote","setModalNewNote","modalSearchBar","setModalSearchBar","modalFilter","setFilter","$","ready","searchBar","console","log","search","value","toLowerCase","all","querySelectorAll","innerHTML","indexOf","parentNode","classList","add","remove","e","preventDefault","PORT","process","noteNameInput","noteImportant","noteDateInput","noteMsgInput","alert","checked","userNote","noteName","important","reminder","noteMsg","data","JSON","stringify","xhr","XMLHttpRequest","open","setRequestHeader","send","checkConnection","Check","a","fetch","res","json","noteDisplay","notes","paragraph","createElement","innerMsg","createTextNode","appendChild","append","forEach","div","header","spanHeader","body","spanBody","footer","spanFooter","noteCreationDate","fetchFile","NoteIt","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.befaf445.chunk.js","sourcesContent":["import './cssFiles/header.css';\r\n//---------------------------------------\r\nexport default function Header() {\r\n\treturn(\r\n\t\t<div id = \"header\">\r\n\t\t\t<h1>NoteKeeper</h1>\r\n\t\t</div>\r\n\t);\r\n}","import './cssFiles/backdrop.css';\r\n//---------------------------------------\r\nexport default function Backdrop(props) {\r\n\treturn(\r\n\t\t<div id = \"backdrop\" onClick = {props.onCancel}></div>\r\n\t);\r\n}","import './cssFiles/searchBar.css';\r\nimport React from \"react\";\r\nimport $ from 'jquery';\r\n//---------------------------------------\r\nexport default function SearchBar(props) {\r\n\treturn(\r\n\t\t<div id = \"searchBar-modal\">\r\n\t\t\t<input type=\"text\" id = \"searchBar\" autoFocus></input>\r\n\t\t\t<div id = \"btn-closeSearchBar\" onClick = {props.onCancel}>\r\n\t\t\t\t<span> {/* the span is for coloring the close sign*/}\r\n\t\t\t\t\t<i className=\"far fa-times-circle\"></i>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport function filterBySearchBar(){\r\n\t\t$(document).ready(function() {\r\n\t\t\tlet searchBar = document.getElementById(\"searchBar\");\r\n\t\t\tsearchBar.addEventListener(\"keyup\", () => {\r\n\t\t\t\tconsole.log(\"ola\");\r\n\t\t\t\t//----------------\r\n\t\t\t\tvar search = searchBar.value.toLowerCase();\r\n\t\t\t\tvar all = document.querySelectorAll(\".header span\");\r\n\r\n\t\t\t\tfor(let i of all){\r\n\t\t\t\t\tlet item = i.innerHTML.toLowerCase(); // message\r\n\t\t\t\t\tif(item.indexOf(search) === -1){\r\n\t\t\t\t\t\ti.parentNode.parentNode.classList.add(\"hide\");\r\n\t\t\t\t\t\t//console.log(i.parentNode.parentNode);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ti.parentNode.parentNode.classList.remove(\"hide\");\r\n\t\t\t\t\t\t//console.log(i.parentNode.parentNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n}","import './cssFiles/filter.css';\r\n//---------------------------------------\r\nexport default function Filter(props){\r\n    return(\r\n        <div id = \"filter-container\">\r\n            <FilterOptions content = \"Important\" onClick = {filterImportant}/>\r\n            <FilterOptions content = \"All\" onClick = {filterAll}/>\r\n            <FilterOptions content = \"Close\" onClick = {props.onCancel}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction FilterOptions(props){\r\n    return(\r\n        <div className = \"filterOption\" onClick = {props.onClick}>\r\n            <p>{props.content}</p>\r\n        </div>\r\n    );\r\n}\r\nfunction filterImportant(){\r\n    const off = document.getElementsByClassName('off');\r\n    for(let i = 0; i < off.length; i++){\r\n        off[i].style.display = \"none\";\r\n    }\r\n}\r\nfunction filterAll(){\r\n    const note = document.getElementsByClassName('note');\r\n    for(let i = 0; i < note.length; i++){\r\n        note[i].style.display = \"inline-block\";\r\n    }\r\n}","import './cssFiles/newNoteModal.css';\r\nimport React from \"react\";\r\n//---------------------------------------\r\nexport default function NewNoteModal(props) {\r\n\tReact.useEffect(() => {\r\n\t\tminimumSetDate();\r\n\t}, []);\r\n\treturn(\r\n\t\t<div id = \"newNoteModal\">\r\n\t\t\t<div id = \"newNote-header\">\r\n\t\t\t\t<h2>NoteKeeper</h2>\r\n\t\t\t\t<span onClick = {props.onCancel}> {/* the span is for coloring the close sign*/}\r\n\t\t\t\t\t<i className = \"fas fa-times\"></i>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<form id = \"newNote-content\" method = \"post\" encType = \"application/x-www-form-urlencoded\">\r\n\t\t\t\t<label htmlFor = \"noteName\">Note Name:</label>\r\n\t\t\t\t<input type=\"text\" id = \"noteName\"></input>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t{/* ---------------------- */}\r\n\t\t\t\t<label htmlFor=\"checkB-important\">Important:</label>\r\n\t\t\t\t<input type = \"checkbox\" name = \"important\" id = \"checkB-important\" required></input>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t{/* ---------------------- */}\r\n\t\t\t\t<label htmlFor=\"remindDate\">Remind me on:</label>\r\n\t\t\t\t<input type=\"date\" name = \"remindDate\" id = \"remindDate\" required></input>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t{/* ---------------------- */}\r\n\t\t\t\t<label htmlFor=\"noteMsg\" required>Note:</label>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<textarea id = \"noteMsg\"></textarea>\r\n\t\t\t\t{/* ---------------------- */}\r\n\t\t\t\t<button id = \"submit\" onClick = {props.onCancel}><p>Submit</p></button>\r\n\t\t\t</form>\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\nexport function minimumSetDate() {\r\n\tlet today = new Date();\r\n\r\n\tlet day = today.getDate(); // typeof = number\r\n\tlet month = ('0' + (today.getMonth()+1)).slice(-2); // typeof = number\r\n\tlet year = today.getFullYear(); // typeof = number\r\n\r\n\tlet currentDate = `${year}-${month}-${day}`; // typeof = string;\r\n\t//console.log(typeof(currentDate), currentDate);\r\n\t//------------------------------------------\r\n\tlet milli = (Date.parse(currentDate) + 86400000 /* a day in milliseconds */);\r\n\t//console.log(milli);\r\n\t//------------------------------------------\r\n\tlet minimumDate = new Date(milli);\r\n\t\r\n\tlet minimumDay = minimumDate.getDate(); // typeof = number\r\n\tlet minimumMonth = ('0' + (minimumDate.getMonth()+1)).slice(-2); // typeof = number\r\n\tlet minimumYear = minimumDate.getFullYear(); // typeof = number\r\n\r\n\tcurrentDate = `${minimumYear}-${minimumMonth}-${minimumDay}`; // typeof = string;\r\n\t//console.log(typeof(currentDate), currentDate);\r\n\r\n\tdocument.getElementById(\"remindDate\").setAttribute(\"min\", currentDate);\r\n};\r\n\r\nexport function checkConnection(){\r\n\tconst PORT = process.env.PORT || 3001;\r\n\t//------------------------\r\n\tlet noteNameInput = document.getElementById(\"noteName\"); // form fields\r\n\tlet noteImportant = document.getElementById(\"checkB-important\"); // form fields\r\n\tlet noteDateInput = document.getElementById(\"remindDate\"); // form fields\r\n\tlet noteMsgInput = document.getElementById(\"noteMsg\"); // form fields\r\n\t\r\n\tif((noteNameInput.value === \"\") || (noteDateInput.value === \"\") || (noteMsgInput.value === \"\")){\r\n\t\talert(\"A field is not properly filled!\");\r\n\t} else {\r\n\t\t//---------------------------------\r\n\t\tif(noteImportant.checked){ // check if checkbox is on\r\n\t\t\tnoteImportant.value = \"on\";\r\n\t\t} else {\r\n\t\t\tnoteImportant.value = \"off\";\r\n\t\t}\r\n\t\t//---------------------------------\r\n\t\tlet myForm = document.getElementById(\"newNote-content\"); // form\r\n\t\tlet method = myForm.method; // form method\r\n\t\t//--------------------\r\n\t\tlet userNote = { // the object\r\n\t\t\tnoteName: noteNameInput.value,\r\n\t\t\timportant: noteImportant.value,\r\n\t\t\treminder: noteDateInput.value,\r\n\t\t\tnoteMsg: noteMsgInput.value,\r\n\t\t\tcreationDate: creationDate()\r\n\t\t}\r\n\t\tlet data = JSON.stringify(userNote);\r\n\t\t\r\n\t\tlet xhr = new XMLHttpRequest();\r\n\t\txhr.open(method, `http://localhost:${PORT}/api`, true);\r\n\t\txhr.setRequestHeader('Content-Type', 'application/json'); //; charset=UTF-8\t\r\n\t\txhr.send(data);\r\n\t}\r\n};\r\n\r\nfunction creationDate(){\r\n    let today = new Date();\r\n    let day = today.getDate();\r\n    let month = today.getMonth()+1;\r\n    let year = today.getFullYear();\r\n    let currentDate = `${day}/${month}/${year}`;\r\n    return currentDate;\r\n}","import './cssFiles/menuButtons.css';\r\nimport Backdrop from './Backdrop';\r\nimport SearchBar from './SearchBar';\r\nimport Filter from './Filter';\r\nimport NewNoteModal from './NewNoteModal';\r\nimport React, { useState } from 'react';\r\nimport { checkConnection } from './NewNoteModal';\r\nimport { filterBySearchBar } from './SearchBar';\r\n//---------------------------------------\r\nexport default function MenuButtons() {\r\n\twindow.onload = () => { // testing\r\n\t\tconst noteDisplay = document.getElementById('noteDisplay');\r\n\t\tnoteDisplay.addEventListener('click', () =>{\r\n\t\t\tfilterClose();\r\n\t\t});\r\n\t}\r\n\tconst [modalBackdrop, setModalBackdrop] = useState(false); // controlls backdrop\r\n\tconst [modalNewNote, setModalNewNote] = useState(false); // controlls new note menu\r\n\tconst [modalSearchBar, setModalSearchBar] = useState(false); // controlls searchbar\r\n\tconst [modalFilter, setFilter] = useState(false); // controlls filter\r\n\r\n    function openNewNoteModal(){\r\n        setModalBackdrop(true); // opens backdrop\r\n        setModalNewNote(true); // opens new note menu\r\n    }\r\n\tfunction closeNewNoteModal(e){\r\n\t\te.preventDefault();\r\n\t\tcheckConnection(); // imported function\r\n        setModalBackdrop(false); // closes backdrop\r\n        setModalNewNote(false); // closes new note menu\r\n\t}\r\n    function backdropClose(){\r\n        setModalBackdrop(false); // closes backdrop\r\n        setModalNewNote(false); // closes new note menu\r\n        setFilter(false); // closes searchbar\r\n    }\r\n    //--------------------\r\n    function searchBarOpen(){\r\n        setModalSearchBar(true); // opens searchbar\r\n\t\tfilterBySearchBar();\r\n    }\r\n    function searchBarClose(){\r\n        setModalSearchBar(false); // closes searchbar\r\n    }\r\n    //--------------------\r\n\tfunction filterOpen(){\r\n        setFilter(true); // opens searchbar\r\n    }\r\n    function filterClose(){\r\n        setModalBackdrop(false); // closes backdrop\r\n        setFilter(false); // closes filter\r\n    }\r\n    //--------------------\r\n\treturn(\r\n\t\t<div id = \"menu-for-btns\">\r\n\t\t\t<div id = \"btn-addNewNote\" onClick = {openNewNoteModal}>\r\n\t\t\t\t<span> {/* the span is for coloring the plus sign*/}\r\n\t\t\t\t\t<i className=\"fas fa-plus\"></i>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id = \"btn-openSearchBar\" onClick = {searchBarOpen}>\r\n\t\t\t\t<span> {/* the span is for coloring the magnifying glass sign*/}\r\n\t\t\t\t\t<i className=\"fas fa-search\"></i>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id = \"btn-filter\" onClick = {filterOpen}>\r\n\t\t\t\t<span> {/* the span is for coloring the magnifying glass sign*/}\r\n\t\t\t\t\t<i className=\"fas fa-filter\"></i>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t{modalBackdrop && <Backdrop onCancel = {backdropClose}/>} {/* if modalBackdrop is true and Backdrop is true (which is always true), execute Backdrop */}\r\n\t\t\t{modalNewNote && <NewNoteModal onCancel = {closeNewNoteModal}/>} {/* same */}\r\n\t\t\t{modalSearchBar && <SearchBar onCancel = {searchBarClose}/>} {/* same */}\r\n\t\t\t{modalFilter && <Filter onCancel = {filterClose}/>} {/* same */}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n","import React from \"react\";\r\nimport '../cssFiles/noteChecker.css';\r\n//-------------------------------------\r\nexport default function Check(){\r\n   //const [data, setData] = React.useState(null);\r\n    React.useEffect(() => {\r\n        //--------------------------------------\r\n        const fetchFile = async () => {\r\n            const PORT = process.env.PORT || 3001;\r\n            const res = await fetch(`http://localhost:${PORT}/api`); // first connect to api //\"http://localhost:5000/api\" = heroku 3001 = proxy\r\n            const data = await res.json(); // is a response (with the correct content-type) that is the parameter converted to a JSON string using the JSON.stringify() method.\r\n            const noteDisplay = document.getElementById('noteDisplay');\r\n            //-------------------------------\r\n            if(data.notes.length < 1){\r\n                let paragraph = document.createElement(\"p\");\r\n                paragraph.setAttribute(\"id\", \"msg\");\r\n                let innerMsg = document.createTextNode(\"There aren't any notes!\");\r\n                paragraph.appendChild(innerMsg);\r\n                //-----------------------\r\n                noteDisplay.append(paragraph);\r\n                //console.log(paragraph);\r\n            } else {\r\n                noteDisplay.style.display = \"block\";\r\n                data.notes.forEach((note)=>{             \r\n        /*note*/    let div = document.createElement(\"div\"); // creation of the note\r\n                    div.classList.add(note.noteName);\r\n                    div.classList.add(\"note\");; // giving them class \"note\"\r\n                    //---------------------\r\n/*importantOrNot*/  function isImportantOrNot(){\r\n                        if(note.important === \"off\"){\r\n                            div.classList.add(\"off\");\r\n                        }\r\n                    }       \r\n                    //---------------------\r\n   /*note-header*/  let header = document.createElement(\"div\"); // created the header\r\n                    header.setAttribute(\"class\", \"header\"); // then gave it the \"header\" class\r\n                    div.appendChild(header); // and then append the header to the \"note\"\r\n\r\n                    let spanHeader = document.createElement(\"span\"); // lets create a span to hold the noteName\r\n                    let noteName = document.createTextNode(note.noteName); // then we get the object key/value pair\r\n                    spanHeader.appendChild(noteName); // then we append to the span the noteName\r\n                    header.appendChild(spanHeader); // and to the header the span\r\n                    //---------------------\r\n   /*note-body*/    let body = document.createElement(\"div\");\r\n                    body.setAttribute(\"class\", \"body\");\r\n                    div.appendChild(body);\r\n\r\n                    let spanBody = document.createElement(\"span\");\r\n                    let noteMsg = document.createTextNode(note.noteMsg);\r\n                    spanBody.appendChild(noteMsg);\r\n                    body.appendChild(spanBody);\r\n                    //---------------------\r\n                    noteDisplay.append(div); // then adding them to the \"note display\"\r\n                    //console.log(note.noteName);\r\n                    //---------------------\r\n   /*note-footer*/  let footer = document.createElement(\"div\");\r\n                    footer.setAttribute(\"class\", \"footer\");\r\n                    div.appendChild(footer);\r\n\r\n                    let spanFooter = document.createElement(\"span\");\r\n                    let noteCreationDate = document.createTextNode(`Creation date: ${note.creationDate}`);\r\n                    spanFooter.appendChild(noteCreationDate);\r\n                    footer.appendChild(spanFooter);\r\n                    //----------------------\r\n                    isImportantOrNot();\r\n                });\r\n            }\r\n        }\r\n        fetchFile();\r\n    });\r\n    //------------------------------\r\n    return(\r\n        <div id = \"noteDisplay\"></div>\r\n    );\r\n}","import Header from './components/Header';\nimport MenuButtons from './components/MenuButtons';\nimport Check from './components/underTheHood/NoteChecker';\n//-------------------------------------\nexport default function NoteIt() {\n  return (\n    <div id = \"container\" >\n      <Header />\n      <MenuButtons />\n      <Check />\n    </div>\n  );\n}\n// https://fontawesome.com/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport NoteIt from './NoteIt';\n//-----------------------------\nimport './index.css';\nimport './components/cssFiles/responsiveDesign.css'\n\nReactDOM.render(<React.StrictMode><NoteIt /></React.StrictMode>, document.getElementById('root'));\n"],"sourceRoot":""}